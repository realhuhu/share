/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type { User, UserInterface } from "../User";

const _abi = [
  {
    inputs: [],
    name: "supply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
    constant: true,
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "nickname",
        type: "string",
      },
    ],
    name: "register",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "avatar",
            type: "string",
          },
          {
            internalType: "string",
            name: "nickname",
            type: "string",
          },
          {
            internalType: "string",
            name: "signature",
            type: "string",
          },
          {
            internalType: "address[]",
            name: "following",
            type: "address[]",
          },
          {
            internalType: "address[]",
            name: "follower",
            type: "address[]",
          },
          {
            internalType: "uint256",
            name: "ID",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "major",
            type: "string",
          },
        ],
        internalType: "struct User.UserInfo",
        name: "user_info",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080604052600a60005534801561001557600080fd5b50610b1b806100256000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c8063047fc9aa1461003b578063f2c298be14610059575b600080fd5b610043610089565b604051610050919061036d565b60405180910390f35b610073600480360381019061006e91906104e2565b61008f565b6040516100809190610768565b60405180910390f35b60005481565b610097610270565b600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615610124576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161011b906107e7565b60405180910390fd5b6060806040518060e001604052806040518060200160405280600081525081526020018581526020016040518060200160405280600081525081526020018381526020018281526020016000815260200160405180602001604052806000815250815250925082600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008201518160000190816101df9190610a13565b5060208201518160010190816101f59190610a13565b50604082015181600201908161020b9190610a13565b5060608201518160030190805190602001906102289291906102ad565b5060808201518160040190805190602001906102459291906102ad565b5060a0820151816005015560c08201518160060190816102659190610a13565b509050505050919050565b6040518060e00160405280606081526020016060815260200160608152602001606081526020016060815260200160008152602001606081525090565b828054828255906000526020600020908101928215610326579160200282015b828111156103255782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550916020019190600101906102cd565b5b5090506103339190610337565b5090565b5b80821115610350576000816000905550600101610338565b5090565b6000819050919050565b61036781610354565b82525050565b6000602082019050610382600083018461035e565b92915050565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6103ef826103a6565b810181811067ffffffffffffffff8211171561040e5761040d6103b7565b5b80604052505050565b6000610421610388565b905061042d82826103e6565b919050565b600067ffffffffffffffff82111561044d5761044c6103b7565b5b610456826103a6565b9050602081019050919050565b82818337600083830152505050565b600061048561048084610432565b610417565b9050828152602081018484840111156104a1576104a06103a1565b5b6104ac848285610463565b509392505050565b600082601f8301126104c9576104c861039c565b5b81356104d9848260208601610472565b91505092915050565b6000602082840312156104f8576104f7610392565b5b600082013567ffffffffffffffff81111561051657610515610397565b5b610522848285016104b4565b91505092915050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561056557808201518184015260208101905061054a565b60008484015250505050565b600061057c8261052b565b6105868185610536565b9350610596818560208601610547565b61059f816103a6565b840191505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610601826105d6565b9050919050565b610611816105f6565b82525050565b60006106238383610608565b60208301905092915050565b6000602082019050919050565b6000610647826105aa565b61065181856105b5565b935061065c836105c6565b8060005b8381101561068d5781516106748882610617565b975061067f8361062f565b925050600181019050610660565b5085935050505092915050565b6106a381610354565b82525050565b600060e08301600083015184820360008601526106c68282610571565b915050602083015184820360208601526106e08282610571565b915050604083015184820360408601526106fa8282610571565b91505060608301518482036060860152610714828261063c565b9150506080830151848203608086015261072e828261063c565b91505060a083015161074360a086018261069a565b5060c083015184820360c086015261075b8282610571565b9150508091505092915050565b6000602082019050818103600083015261078281846106a9565b905092915050565b600082825260208201905092915050565b7f4531000000000000000000000000000000000000000000000000000000000000600082015250565b60006107d160028361078a565b91506107dc8261079b565b602082019050919050565b60006020820190508181036000830152610800816107c4565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061084e57607f821691505b60208210810361086157610860610807565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026108c97fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8261088c565b6108d3868361088c565b95508019841693508086168417925050509392505050565b6000819050919050565b600061091061090b61090684610354565b6108eb565b610354565b9050919050565b6000819050919050565b61092a836108f5565b61093e61093682610917565b848454610899565b825550505050565b600090565b610953610946565b61095e818484610921565b505050565b5b818110156109825761097760008261094b565b600181019050610964565b5050565b601f8211156109c75761099881610867565b6109a18461087c565b810160208510156109b0578190505b6109c46109bc8561087c565b830182610963565b50505b505050565b600082821c905092915050565b60006109ea600019846008026109cc565b1980831691505092915050565b6000610a0383836109d9565b9150826002028217905092915050565b610a1c8261052b565b67ffffffffffffffff811115610a3557610a346103b7565b5b610a3f8254610836565b610a4a828285610986565b600060209050601f831160018114610a7d5760008415610a6b578287015190505b610a7585826109f7565b865550610add565b601f198416610a8b86610867565b60005b82811015610ab357848901518255600182019150602085019450602081019050610a8e565b86831015610ad05784890151610acc601f8916826109d9565b8355505b6001600288020188555050505b50505050505056fea26469706673582212209db14df336cf6b243402ada84df913f693cd254ea1ac89bd9d6007138df1506b64736f6c63430008130033";

type UserConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: UserConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class User__factory extends ContractFactory {
  constructor(...args: UserConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<User> {
    return super.deploy(overrides || {}) as Promise<User>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): User {
    return super.attach(address) as User;
  }
  override connect(signer: Signer): User__factory {
    return super.connect(signer) as User__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): UserInterface {
    return new utils.Interface(_abi) as UserInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): User {
    return new Contract(address, _abi, signerOrProvider) as User;
  }
}
