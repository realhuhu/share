/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type { UserContract, UserContractInterface } from "../UserContract";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "admin",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "nickname",
        type: "string",
      },
    ],
    name: "register",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "avatar",
            type: "string",
          },
          {
            internalType: "string",
            name: "nickname",
            type: "string",
          },
          {
            internalType: "string",
            name: "signature",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "login_timestamp",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "following_num",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "follower_num",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "ID",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "major",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "heart",
            type: "uint256",
          },
        ],
        internalType: "struct UserContract.UserSelfInfo",
        name: "self_info",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user_address",
        type: "address",
      },
    ],
    name: "isRegistered",
    outputs: [
      {
        internalType: "bool",
        name: "is_registered",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getSelfInfo",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "avatar",
            type: "string",
          },
          {
            internalType: "string",
            name: "nickname",
            type: "string",
          },
          {
            internalType: "string",
            name: "signature",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "login_timestamp",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "following_num",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "follower_num",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "ID",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "major",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "heart",
            type: "uint256",
          },
        ],
        internalType: "struct UserContract.UserSelfInfo",
        name: "self_info",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user_address",
        type: "address",
      },
    ],
    name: "getUserInfo",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "avatar",
            type: "string",
          },
          {
            internalType: "string",
            name: "nickname",
            type: "string",
          },
          {
            internalType: "string",
            name: "signature",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "login_timestamp",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "following_num",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "follower_num",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "heart",
            type: "uint256",
          },
        ],
        internalType: "struct UserContract.UserBriefInfo",
        name: "user_info",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "cursor",
        type: "address",
      },
    ],
    name: "getFollowings",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "avatar",
            type: "string",
          },
          {
            internalType: "string",
            name: "nickname",
            type: "string",
          },
        ],
        internalType: "struct UserContract.UserSimpleInfo[10]",
        name: "followings_info",
        type: "tuple[10]",
      },
      {
        internalType: "uint256",
        name: "length",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "cursor",
        type: "address",
      },
    ],
    name: "getFollowers",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "avatar",
            type: "string",
          },
          {
            internalType: "string",
            name: "nickname",
            type: "string",
          },
        ],
        internalType: "struct UserContract.UserSimpleInfo[10]",
        name: "followers_info",
        type: "tuple[10]",
      },
      {
        internalType: "uint256",
        name: "length",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "target_user",
        type: "address",
      },
      {
        internalType: "bool",
        name: "is_follow",
        type: "bool",
      },
    ],
    name: "setFollow",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550612378806100606000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c8063cca22f791161005b578063cca22f791461013c578063cec6cdfa1461016d578063f2c298be14610189578063f851a440146101b957610088565b80636386c1c71461008d5780637e8e7733146100bd578063c2fe2022146100db578063c3c5a5471461010c575b600080fd5b6100a760048036038101906100a2919061168d565b6101d7565b6040516100b4919061180d565b60405180910390f35b6100c561049e565b6040516100d29190611909565b60405180910390f35b6100f560048036038101906100f0919061168d565b610800565b604051610103929190611a34565b60405180910390f35b6101266004803603810190610121919061168d565b610b6d565b6040516101339190611a7f565b60405180910390f35b6101566004803603810190610151919061168d565b610bbc565b604051610164929190611a34565b60405180910390f35b61018760048036038101906101829190611ac6565b610ee8565b005b6101a3600480360381019061019e9190611c3b565b611351565b6040516101b09190611909565b60405180910390f35b6101c1611526565b6040516101ce9190611c93565b60405180910390f35b6101df61154a565b816000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206003015403610265576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161025c90611d31565b60405180910390fd5b6000600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002090506040518060e001604052808260000180546102c290611d80565b80601f01602080910402602001604051908101604052809291908181526020018280546102ee90611d80565b801561033b5780601f106103105761010080835404028352916020019161033b565b820191906000526020600020905b81548152906001019060200180831161031e57829003601f168201915b5050505050815260200182600101805461035490611d80565b80601f016020809104026020016040519081016040528092919081815260200182805461038090611d80565b80156103cd5780601f106103a2576101008083540402835291602001916103cd565b820191906000526020600020905b8154815290600101906020018083116103b057829003601f168201915b505050505081526020018260020180546103e690611d80565b80601f016020809104026020016040519081016040528092919081815260200182805461041290611d80565b801561045f5780601f106104345761010080835404028352916020019161045f565b820191906000526020600020905b81548152906001019060200180831161044257829003601f168201915b5050505050815260200184606001518152602001826004016003015481526020018260080160030154815260200182600e015481525092505050919050565b6104a6611587565b336000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600301540361052c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161052390611d31565b60405180910390fd5b6000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020905060405180610120016040528082600001805461058a90611d80565b80601f01602080910402602001604051908101604052809291908181526020018280546105b690611d80565b80156106035780601f106105d857610100808354040283529160200191610603565b820191906000526020600020905b8154815290600101906020018083116105e657829003601f168201915b5050505050815260200182600101805461061c90611d80565b80601f016020809104026020016040519081016040528092919081815260200182805461064890611d80565b80156106955780601f1061066a57610100808354040283529160200191610695565b820191906000526020600020905b81548152906001019060200180831161067857829003601f168201915b505050505081526020018260020180546106ae90611d80565b80601f01602080910402602001604051908101604052809291908181526020018280546106da90611d80565b80156107275780601f106106fc57610100808354040283529160200191610727565b820191906000526020600020905b81548152906001019060200180831161070a57829003601f168201915b5050505050815260200182600301548152602001826004016003015481526020018260080160030154815260200182600c0154815260200182600d01805461076e90611d80565b80601f016020809104026020016040519081016040528092919081815260200182805461079a90611d80565b80156107e75780601f106107bc576101008083540402835291602001916107e7565b820191906000526020600020905b8154815290600101906020018083116107ca57829003601f168201915b5050505050815260200182600e01548152509250505090565b6108086115d3565b6000336000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206003015403610890576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161088790611d31565b60405180910390fd5b6000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206008019050806003015492506000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060080173__AddressLinkedList_____________________637ea9490990918860006040518463ffffffff1660e01b815260040161095e93929190611dd6565b61014060405180830381865af415801561097c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109a09190611ed8565b905060005b600a811015610b64576000600160008484600a81106109c7576109c6611f06565b5b602002015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002090506040518060400160405280826000018054610a2290611d80565b80601f0160208091040260200160405190810160405280929190818152602001828054610a4e90611d80565b8015610a9b5780601f10610a7057610100808354040283529160200191610a9b565b820191906000526020600020905b815481529060010190602001808311610a7e57829003601f168201915b50505050508152602001826001018054610ab490611d80565b80601f0160208091040260200160405190810160405280929190818152602001828054610ae090611d80565b8015610b2d5780601f10610b0257610100808354040283529160200191610b2d565b820191906000526020600020905b815481529060010190602001808311610b1057829003601f168201915b50505050508152508783600a8110610b4857610b47611f06565b5b6020020181905250508080610b5c90611f64565b9150506109a5565b50505050915091565b600080600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206003015414159050919050565b610bc46115d3565b6000336000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206003015403610c4c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c4390611d31565b60405180910390fd5b6000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060040190508060030154925060008173__AddressLinkedList_____________________637ea9490990918860006040518463ffffffff1660e01b8152600401610cd993929190611dd6565b61014060405180830381865af4158015610cf7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d1b9190611ed8565b905060005b600a811015610edf576000600160008484600a8110610d4257610d41611f06565b5b602002015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002090506040518060400160405280826000018054610d9d90611d80565b80601f0160208091040260200160405190810160405280929190818152602001828054610dc990611d80565b8015610e165780601f10610deb57610100808354040283529160200191610e16565b820191906000526020600020905b815481529060010190602001808311610df957829003601f168201915b50505050508152602001826001018054610e2f90611d80565b80601f0160208091040260200160405190810160405280929190818152602001828054610e5b90611d80565b8015610ea85780601f10610e7d57610100808354040283529160200191610ea8565b820191906000526020600020905b815481529060010190602001808311610e8b57829003601f168201915b50505050508152508783600a8110610ec357610ec2611f06565b5b6020020181905250508080610ed790611f64565b915050610d20565b50505050915091565b336000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206003015403610f6e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f6590611d31565b60405180910390fd5b826000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206003015403610ff4576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610feb90611d31565b60405180910390fd5b6000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060040190506000600160008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600801905084801561110657508173__AddressLinkedList_____________________632cc260199091886040518363ffffffff1660e01b81526004016110c3929190611fac565b602060405180830381865af41580156110e0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111049190611fea565b155b156111e6578173__AddressLinkedList_____________________63dbd4df179091886040518363ffffffff1660e01b8152600401611146929190611fac565b60006040518083038186803b15801561115e57600080fd5b505af4158015611172573d6000803e3d6000fd5b505050508073__AddressLinkedList_____________________63dbd4df179091336040518363ffffffff1660e01b81526004016111b1929190611fac565b60006040518083038186803b1580156111c957600080fd5b505af41580156111dd573d6000803e3d6000fd5b50505050611349565b8415801561126c57508173__AddressLinkedList_____________________632cc260199091886040518363ffffffff1660e01b815260040161122a929190611fac565b602060405180830381865af4158015611247573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061126b9190611fea565b5b15611348578173__AddressLinkedList_____________________63ad3f3a089091886040518363ffffffff1660e01b81526004016112ac929190611fac565b60006040518083038186803b1580156112c457600080fd5b505af41580156112d8573d6000803e3d6000fd5b505050508073__AddressLinkedList_____________________63ad3f3a089091336040518363ffffffff1660e01b8152600401611317929190611fac565b60006040518083038186803b15801561132f57600080fd5b505af4158015611343573d6000803e3d6000fd5b505050505b5b505050505050565b611359611587565b336000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060030154146113df576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016113d690612089565b60405180910390fd5b6000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000209050838160010190816114339190612255565b508060080173__AddressLinkedList_____________________637fc06cef90916040518263ffffffff1660e01b81526004016114709190612327565b60006040518083038186803b15801561148857600080fd5b505af415801561149c573d6000803e3d6000fd5b505050508060040173__AddressLinkedList_____________________637fc06cef90916040518263ffffffff1660e01b81526004016114dc9190612327565b60006040518083038186803b1580156114f457600080fd5b505af4158015611508573d6000803e3d6000fd5b5050505042816003018190555061151d61049e565b92505050919050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6040518060e00160405280606081526020016060815260200160608152602001600081526020016000815260200160008152602001600081525090565b6040518061012001604052806060815260200160608152602001606081526020016000815260200160008152602001600081526020016000815260200160608152602001600081525090565b604051806101400160405280600a905b6115eb611601565b8152602001906001900390816115e35790505090565b604051806040016040528060608152602001606081525090565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061165a8261162f565b9050919050565b61166a8161164f565b811461167557600080fd5b50565b60008135905061168781611661565b92915050565b6000602082840312156116a3576116a2611625565b5b60006116b184828501611678565b91505092915050565b600081519050919050565b600082825260208201905092915050565b60005b838110156116f45780820151818401526020810190506116d9565b60008484015250505050565b6000601f19601f8301169050919050565b600061171c826116ba565b61172681856116c5565b93506117368185602086016116d6565b61173f81611700565b840191505092915050565b6000819050919050565b61175d8161174a565b82525050565b600060e08301600083015184820360008601526117808282611711565b9150506020830151848203602086015261179a8282611711565b915050604083015184820360408601526117b48282611711565b91505060608301516117c96060860182611754565b5060808301516117dc6080860182611754565b5060a08301516117ef60a0860182611754565b5060c083015161180260c0860182611754565b508091505092915050565b600060208201905081810360008301526118278184611763565b905092915050565b600061012083016000830151848203600086015261184d8282611711565b915050602083015184820360208601526118678282611711565b915050604083015184820360408601526118818282611711565b91505060608301516118966060860182611754565b5060808301516118a96080860182611754565b5060a08301516118bc60a0860182611754565b5060c08301516118cf60c0860182611754565b5060e083015184820360e08601526118e78282611711565b9150506101008301516118fe610100860182611754565b508091505092915050565b60006020820190508181036000830152611923818461182f565b905092915050565b6000600a9050919050565b600081905092915050565b6000819050919050565b600060408301600083015184820360008601526119688282611711565b915050602083015184820360208601526119828282611711565b9150508091505092915050565b600061199b838361194b565b905092915050565b6000602082019050919050565b60006119bb8261192b565b6119c58185611936565b9350836020820285016119d785611941565b8060005b85811015611a1357848403895281516119f4858261198f565b94506119ff836119a3565b925060208a019950506001810190506119db565b50829750879550505050505092915050565b611a2e8161174a565b82525050565b60006040820190508181036000830152611a4e81856119b0565b9050611a5d6020830184611a25565b9392505050565b60008115159050919050565b611a7981611a64565b82525050565b6000602082019050611a946000830184611a70565b92915050565b611aa381611a64565b8114611aae57600080fd5b50565b600081359050611ac081611a9a565b92915050565b60008060408385031215611add57611adc611625565b5b6000611aeb85828601611678565b9250506020611afc85828601611ab1565b9150509250929050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b611b4882611700565b810181811067ffffffffffffffff82111715611b6757611b66611b10565b5b80604052505050565b6000611b7a61161b565b9050611b868282611b3f565b919050565b600067ffffffffffffffff821115611ba657611ba5611b10565b5b611baf82611700565b9050602081019050919050565b82818337600083830152505050565b6000611bde611bd984611b8b565b611b70565b905082815260208101848484011115611bfa57611bf9611b0b565b5b611c05848285611bbc565b509392505050565b600082601f830112611c2257611c21611b06565b5b8135611c32848260208601611bcb565b91505092915050565b600060208284031215611c5157611c50611625565b5b600082013567ffffffffffffffff811115611c6f57611c6e61162a565b5b611c7b84828501611c0d565b91505092915050565b611c8d8161164f565b82525050565b6000602082019050611ca86000830184611c84565b92915050565b600082825260208201905092915050565b7f45303a20557365722e736f6c3e55736572436f6e74726163743e5f726567697360008201527f74657265645f0000000000000000000000000000000000000000000000000000602082015250565b6000611d1b602683611cae565b9150611d2682611cbf565b604082019050919050565b60006020820190508181036000830152611d4a81611d0e565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680611d9857607f821691505b602082108103611dab57611daa611d51565b5b50919050565b8082525050565b611dc18161164f565b82525050565b611dd081611a64565b82525050565b6000606082019050611deb6000830186611db1565b611df86020830185611db8565b611e056040830184611dc7565b949350505050565b600067ffffffffffffffff821115611e2857611e27611b10565b5b602082029050919050565b600080fd5b600081519050611e4781611661565b92915050565b6000611e60611e5b84611e0d565b611b70565b90508060208402830185811115611e7a57611e79611e33565b5b835b81811015611ea35780611e8f8882611e38565b845260208401935050602081019050611e7c565b5050509392505050565b600082601f830112611ec257611ec1611b06565b5b600a611ecf848285611e4d565b91505092915050565b60006101408284031215611eef57611eee611625565b5b6000611efd84828501611ead565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000611f6f8261174a565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203611fa157611fa0611f35565b5b600182019050919050565b6000604082019050611fc16000830185611db1565b611fce6020830184611db8565b9392505050565b600081519050611fe481611a9a565b92915050565b60006020828403121561200057611fff611625565b5b600061200e84828501611fd5565b91505092915050565b7f45313a20557365722e736f6c3e55736572436f6e74726163743e5f6e6f74526560008201527f67697374657265645f0000000000000000000000000000000000000000000000602082015250565b6000612073602983611cae565b915061207e82612017565b604082019050919050565b600060208201905081810360008301526120a281612066565b9050919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b60006008830261210b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826120ce565b61211586836120ce565b95508019841693508086168417925050509392505050565b6000819050919050565b600061215261214d6121488461174a565b61212d565b61174a565b9050919050565b6000819050919050565b61216c83612137565b61218061217882612159565b8484546120db565b825550505050565b600090565b612195612188565b6121a0818484612163565b505050565b5b818110156121c4576121b960008261218d565b6001810190506121a6565b5050565b601f821115612209576121da816120a9565b6121e3846120be565b810160208510156121f2578190505b6122066121fe856120be565b8301826121a5565b50505b505050565b600082821c905092915050565b600061222c6000198460080261220e565b1980831691505092915050565b6000612245838361221b565b9150826002028217905092915050565b61225e826116ba565b67ffffffffffffffff81111561227757612276611b10565b5b6122818254611d80565b61228c8282856121c8565b600060209050601f8311600181146122bf57600084156122ad578287015190505b6122b78582612239565b86555061231f565b601f1984166122cd866120a9565b60005b828110156122f5578489015182556001820191506020850194506020810190506122d0565b86831015612312578489015161230e601f89168261221b565b8355505b6001600288020188555050505b505050505050565b600060208201905061233c6000830184611db1565b9291505056fea264697066735822122083299e2acda9463e3d48044b1526d92d3fda71f171a80ae1466aab90a9e7421e64736f6c63430008130033";

type UserContractConstructorParams =
  | [linkLibraryAddresses: UserContractLibraryAddresses, signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: UserContractConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => {
  return (
    typeof xs[0] === "string" ||
    (Array.isArray as (arg: any) => arg is readonly any[])(xs[0]) ||
    "_isInterface" in xs[0]
  );
};

export class UserContract__factory extends ContractFactory {
  constructor(...args: UserContractConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      const [linkLibraryAddresses, signer] = args;
      super(
        _abi,
        UserContract__factory.linkBytecode(linkLibraryAddresses),
        signer
      );
    }
  }

  static linkBytecode(
    linkLibraryAddresses: UserContractLibraryAddresses
  ): string {
    let linkedBytecode = _bytecode;

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__AddressLinkedList_____________________", "g"),
      linkLibraryAddresses["__AddressLinkedList_____________________"]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    return linkedBytecode;
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<UserContract> {
    return super.deploy(overrides || {}) as Promise<UserContract>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): UserContract {
    return super.attach(address) as UserContract;
  }
  override connect(signer: Signer): UserContract__factory {
    return super.connect(signer) as UserContract__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): UserContractInterface {
    return new utils.Interface(_abi) as UserContractInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): UserContract {
    return new Contract(address, _abi, signerOrProvider) as UserContract;
  }
}

export interface UserContractLibraryAddresses {
  ["__AddressLinkedList_____________________"]: string;
}
