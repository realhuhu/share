/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import BN from "bn.js";
import { EventData, PastEventOptions } from "web3-eth-contract";

export interface FileInterfaceContract
  extends Truffle.Contract<FileInterfaceInstance> {
  "new"(meta?: Truffle.TransactionDetails): Promise<FileInterfaceInstance>;
}

type AllEvents = never;

export interface FileInterfaceInstance extends Truffle.ContractInstance {
  uploadFile: {
    (
      ipfs_address: string,
      title: string,
      description: string,
      images: string[][],
      price: number | BN | string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<Truffle.TransactionResponse<AllEvents>>;
    call(
      ipfs_address: string,
      title: string,
      description: string,
      images: string[][],
      price: number | BN | string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<void>;
    sendTransaction(
      ipfs_address: string,
      title: string,
      description: string,
      images: string[][],
      price: number | BN | string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<string>;
    estimateGas(
      ipfs_address: string,
      title: string,
      description: string,
      images: string[][],
      price: number | BN | string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<number>;
  };

  methods: {
    uploadFile: {
      (
        ipfs_address: string,
        title: string,
        description: string,
        images: string[][],
        price: number | BN | string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<Truffle.TransactionResponse<AllEvents>>;
      call(
        ipfs_address: string,
        title: string,
        description: string,
        images: string[][],
        price: number | BN | string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<void>;
      sendTransaction(
        ipfs_address: string,
        title: string,
        description: string,
        images: string[][],
        price: number | BN | string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<string>;
      estimateGas(
        ipfs_address: string,
        title: string,
        description: string,
        images: string[][],
        price: number | BN | string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<number>;
    };
  };

  getPastEvents(event: string): Promise<EventData[]>;
  getPastEvents(
    event: string,
    options: PastEventOptions,
    callback: (error: Error, event: EventData) => void
  ): Promise<EventData[]>;
  getPastEvents(event: string, options: PastEventOptions): Promise<EventData[]>;
  getPastEvents(
    event: string,
    callback: (error: Error, event: EventData) => void
  ): Promise<EventData[]>;
}
