{
  "contractName": "ImplementationInterface",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        }
      ],
      "name": "addCategory",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "file_address",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "content",
          "type": "string"
        },
        {
          "internalType": "string[3]",
          "name": "images",
          "type": "string[3]"
        }
      ],
      "name": "addComment",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "file_address",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "target_address",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "comment_address",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "content",
          "type": "string"
        }
      ],
      "name": "addSubComment",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "cursor",
          "type": "address"
        }
      ],
      "name": "getCategorySlice",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "category_address",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "num",
              "type": "uint256"
            }
          ],
          "internalType": "struct Types.Category[10]",
          "name": "category_slice",
          "type": "tuple[10]"
        },
        {
          "internalType": "address",
          "name": "next",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "finished",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "cursor",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "category_address",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "order",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "reverse",
          "type": "bool"
        }
      ],
      "name": "getFileBriefInfos",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "file_address",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "category_address",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "is_buy",
              "type": "bool"
            },
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "title",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "owner",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "description",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "cover",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "price",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "up_num",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "down_num",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "buyer_num",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "comment_num",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "up_and_down",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "upload_timestamp",
              "type": "uint256"
            }
          ],
          "internalType": "struct Types.FileBriefInfo[10]",
          "name": "file_infos",
          "type": "tuple[10]"
        },
        {
          "internalType": "address",
          "name": "next",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "finished",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "file_address",
          "type": "address"
        }
      ],
      "name": "getFileDetailInfo",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "file_address",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "category_address",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "is_buy",
              "type": "bool"
            },
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "title",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "description",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "ipfs_address",
              "type": "string"
            },
            {
              "internalType": "string[3]",
              "name": "images",
              "type": "string[3]"
            },
            {
              "internalType": "uint256",
              "name": "price",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "up_num",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "down_num",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "buyer_num",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "comment_num",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "up_and_down",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "upload_timestamp",
              "type": "uint256"
            }
          ],
          "internalType": "struct Types.FileDetailInfo",
          "name": "detail_info",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "user_address",
          "type": "address"
        }
      ],
      "name": "getOtherSimpleInfo",
      "outputs": [
        {
          "components": [
            {
              "internalType": "string",
              "name": "major",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "avatar",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "nickname",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "signature",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "heart",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "medal_num",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "experience",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "follower_num",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "uploaded_file_num",
              "type": "uint256"
            }
          ],
          "internalType": "struct Types.UserSimpleInfo",
          "name": "simple_info",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "file_address",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "cursor",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "order",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "reverse",
          "type": "bool"
        }
      ],
      "name": "getRootComments",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "comment_address",
              "type": "address"
            },
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "target_address",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "comment_address",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "sub_comment_address",
                  "type": "address"
                },
                {
                  "internalType": "string",
                  "name": "content",
                  "type": "string"
                },
                {
                  "components": [
                    {
                      "internalType": "address",
                      "name": "user_address",
                      "type": "address"
                    },
                    {
                      "internalType": "string",
                      "name": "avatar",
                      "type": "string"
                    },
                    {
                      "internalType": "string",
                      "name": "nickname",
                      "type": "string"
                    },
                    {
                      "internalType": "uint256",
                      "name": "experience",
                      "type": "uint256"
                    }
                  ],
                  "internalType": "struct Types.UserBriefInfo",
                  "name": "author",
                  "type": "tuple"
                },
                {
                  "components": [
                    {
                      "internalType": "address",
                      "name": "user_address",
                      "type": "address"
                    },
                    {
                      "internalType": "string",
                      "name": "avatar",
                      "type": "string"
                    },
                    {
                      "internalType": "string",
                      "name": "nickname",
                      "type": "string"
                    },
                    {
                      "internalType": "uint256",
                      "name": "experience",
                      "type": "uint256"
                    }
                  ],
                  "internalType": "struct Types.UserBriefInfo",
                  "name": "target_author",
                  "type": "tuple"
                },
                {
                  "internalType": "uint256",
                  "name": "up_num",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "down_num",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "up_and_down",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "comment_timestamp",
                  "type": "uint256"
                }
              ],
              "internalType": "struct Types.FileChildrenComment[2]",
              "name": "children_comments",
              "type": "tuple[2]"
            },
            {
              "internalType": "string",
              "name": "content",
              "type": "string"
            },
            {
              "internalType": "string[3]",
              "name": "images",
              "type": "string[3]"
            },
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "user_address",
                  "type": "address"
                },
                {
                  "internalType": "string",
                  "name": "avatar",
                  "type": "string"
                },
                {
                  "internalType": "string",
                  "name": "nickname",
                  "type": "string"
                },
                {
                  "internalType": "uint256",
                  "name": "experience",
                  "type": "uint256"
                }
              ],
              "internalType": "struct Types.UserBriefInfo",
              "name": "author",
              "type": "tuple"
            },
            {
              "internalType": "uint256",
              "name": "up_num",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "down_num",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "up_and_down",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "comment_num",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "comment_timestamp",
              "type": "uint256"
            }
          ],
          "internalType": "struct Types.FileRootComment[10]",
          "name": "root_comments",
          "type": "tuple[10]"
        },
        {
          "internalType": "address",
          "name": "next",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "finished",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "cursor",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "reverse",
          "type": "bool"
        }
      ],
      "name": "getSelfFileBriefInfos",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "file_address",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "category_address",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "is_buy",
              "type": "bool"
            },
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "title",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "owner",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "description",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "cover",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "price",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "up_num",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "down_num",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "buyer_num",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "comment_num",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "up_and_down",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "upload_timestamp",
              "type": "uint256"
            }
          ],
          "internalType": "struct Types.FileBriefInfo[10]",
          "name": "file_infos",
          "type": "tuple[10]"
        },
        {
          "internalType": "address",
          "name": "next",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "finished",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getSelfInfo",
      "outputs": [
        {
          "components": [
            {
              "internalType": "string",
              "name": "major",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "avatar",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "nickname",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "signature",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "ID",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "coins",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "heart",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "experience",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "follower_num",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "following_num",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "login_timestamp",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "uploaded_file_num",
              "type": "uint256"
            }
          ],
          "internalType": "struct Types.UserSelfInfo",
          "name": "self_info",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "user_address",
          "type": "address"
        }
      ],
      "name": "isRegistered",
      "outputs": [
        {
          "internalType": "bool",
          "name": "is_registered",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "nickname",
          "type": "string"
        }
      ],
      "name": "register",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceAdmin",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "new_admin",
          "type": "address"
        }
      ],
      "name": "transferAdmin",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "file_address",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "is_up",
          "type": "bool"
        }
      ],
      "name": "upAndDownFile",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "file_address",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "comment_address",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "is_up",
          "type": "bool"
        }
      ],
      "name": "upAndDownFileComment",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "avatar",
          "type": "string"
        }
      ],
      "name": "updateAvatar",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "nickname",
          "type": "string"
        }
      ],
      "name": "updateNickname",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "signature",
          "type": "string"
        }
      ],
      "name": "updateSignature",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "ipfs_address",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "title",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "description",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "category_address",
          "type": "address"
        },
        {
          "internalType": "string[3]",
          "name": "images",
          "type": "string[3]"
        },
        {
          "internalType": "uint256",
          "name": "price",
          "type": "uint256"
        }
      ],
      "name": "uploadFile",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "init",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"name\":\"addCategory\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"file_address\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"content\",\"type\":\"string\"},{\"internalType\":\"string[3]\",\"name\":\"images\",\"type\":\"string[3]\"}],\"name\":\"addComment\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"file_address\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"target_address\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"comment_address\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"content\",\"type\":\"string\"}],\"name\":\"addSubComment\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"cursor\",\"type\":\"address\"}],\"name\":\"getCategorySlice\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"category_address\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"num\",\"type\":\"uint256\"}],\"internalType\":\"struct Types.Category[10]\",\"name\":\"category_slice\",\"type\":\"tuple[10]\"},{\"internalType\":\"address\",\"name\":\"next\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"finished\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"cursor\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"category_address\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"order\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"reverse\",\"type\":\"bool\"}],\"name\":\"getFileBriefInfos\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"file_address\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"category_address\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"is_buy\",\"type\":\"bool\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"title\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"owner\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"cover\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"up_num\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"down_num\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"buyer_num\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"comment_num\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"up_and_down\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"upload_timestamp\",\"type\":\"uint256\"}],\"internalType\":\"struct Types.FileBriefInfo[10]\",\"name\":\"file_infos\",\"type\":\"tuple[10]\"},{\"internalType\":\"address\",\"name\":\"next\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"finished\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"file_address\",\"type\":\"address\"}],\"name\":\"getFileDetailInfo\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"file_address\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"category_address\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"is_buy\",\"type\":\"bool\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"title\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"ipfs_address\",\"type\":\"string\"},{\"internalType\":\"string[3]\",\"name\":\"images\",\"type\":\"string[3]\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"up_num\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"down_num\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"buyer_num\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"comment_num\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"up_and_down\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"upload_timestamp\",\"type\":\"uint256\"}],\"internalType\":\"struct Types.FileDetailInfo\",\"name\":\"detail_info\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user_address\",\"type\":\"address\"}],\"name\":\"getOtherSimpleInfo\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"major\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"avatar\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"nickname\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"signature\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"heart\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"medal_num\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"experience\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"follower_num\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"uploaded_file_num\",\"type\":\"uint256\"}],\"internalType\":\"struct Types.UserSimpleInfo\",\"name\":\"simple_info\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"file_address\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"cursor\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"order\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"reverse\",\"type\":\"bool\"}],\"name\":\"getRootComments\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"comment_address\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"target_address\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"comment_address\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"sub_comment_address\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"content\",\"type\":\"string\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"user_address\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"avatar\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"nickname\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"experience\",\"type\":\"uint256\"}],\"internalType\":\"struct Types.UserBriefInfo\",\"name\":\"author\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"user_address\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"avatar\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"nickname\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"experience\",\"type\":\"uint256\"}],\"internalType\":\"struct Types.UserBriefInfo\",\"name\":\"target_author\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"up_num\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"down_num\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"up_and_down\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"comment_timestamp\",\"type\":\"uint256\"}],\"internalType\":\"struct Types.FileChildrenComment[2]\",\"name\":\"children_comments\",\"type\":\"tuple[2]\"},{\"internalType\":\"string\",\"name\":\"content\",\"type\":\"string\"},{\"internalType\":\"string[3]\",\"name\":\"images\",\"type\":\"string[3]\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"user_address\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"avatar\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"nickname\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"experience\",\"type\":\"uint256\"}],\"internalType\":\"struct Types.UserBriefInfo\",\"name\":\"author\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"up_num\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"down_num\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"up_and_down\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"comment_num\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"comment_timestamp\",\"type\":\"uint256\"}],\"internalType\":\"struct Types.FileRootComment[10]\",\"name\":\"root_comments\",\"type\":\"tuple[10]\"},{\"internalType\":\"address\",\"name\":\"next\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"finished\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"cursor\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"reverse\",\"type\":\"bool\"}],\"name\":\"getSelfFileBriefInfos\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"file_address\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"category_address\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"is_buy\",\"type\":\"bool\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"title\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"owner\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"cover\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"up_num\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"down_num\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"buyer_num\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"comment_num\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"up_and_down\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"upload_timestamp\",\"type\":\"uint256\"}],\"internalType\":\"struct Types.FileBriefInfo[10]\",\"name\":\"file_infos\",\"type\":\"tuple[10]\"},{\"internalType\":\"address\",\"name\":\"next\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"finished\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getSelfInfo\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"major\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"avatar\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"nickname\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"signature\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"ID\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"coins\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"heart\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"experience\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"follower_num\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"following_num\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"login_timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"uploaded_file_num\",\"type\":\"uint256\"}],\"internalType\":\"struct Types.UserSelfInfo\",\"name\":\"self_info\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"init\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user_address\",\"type\":\"address\"}],\"name\":\"isRegistered\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"is_registered\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"nickname\",\"type\":\"string\"}],\"name\":\"register\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"new_admin\",\"type\":\"address\"}],\"name\":\"transferAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"file_address\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"is_up\",\"type\":\"bool\"}],\"name\":\"upAndDownFile\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"file_address\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"comment_address\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"is_up\",\"type\":\"bool\"}],\"name\":\"upAndDownFileComment\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"avatar\",\"type\":\"string\"}],\"name\":\"updateAvatar\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"nickname\",\"type\":\"string\"}],\"name\":\"updateNickname\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"signature\",\"type\":\"string\"}],\"name\":\"updateSignature\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"ipfs_address\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"title\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"category_address\",\"type\":\"address\"},{\"internalType\":\"string[3]\",\"name\":\"images\",\"type\":\"string[3]\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"name\":\"uploadFile\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/src/assets/eth/contracts/OurShare.sol\":\"ImplementationInterface\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"project:/src/assets/eth/contracts/OurShare.sol\":{\"keccak256\":\"0x86131cbef720b5370327486718eaa5dfd548b62537a94d632ed22a5bab8e0e16\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://430047ac0182934cb9dfc1340e34938df36e9899f7048621be9212607277dace\",\"dweb:/ipfs/QmYGqeoXdTDQCS96gcJunt4YFCXD73gB44wwyR3wNZnx5J\"]},\"project:/src/assets/eth/contracts/implementations/File.sol\":{\"keccak256\":\"0xae19d4e7310dfd6272f6413dfe948429178fb83894e90de9b4ea177fc3aca945\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://c957a40a9eb41700b57a827cf553feb98937bc47ccb9fa1164f9e811d2ca273e\",\"dweb:/ipfs/QmNtaAhzZ6Qi54RYmHabBhNaqoBA7913pVjiPu3QR7dS5X\"]},\"project:/src/assets/eth/contracts/implementations/Message.sol\":{\"keccak256\":\"0xcc9926563de8b7aa7b0d60e6e9135d08c53d550f099e6f3a82e0b51f73ec6eff\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://c6e0b12c4e4b1a5b3cd49df4d234e06de7570290bfe234b0a0676223b85519a9\",\"dweb:/ipfs/QmQcW2afP5ra1i4p2GVkc8nEf1iMJfGCZSsQLNjLc1N847\"]},\"project:/src/assets/eth/contracts/implementations/Reward.sol\":{\"keccak256\":\"0xb3c39fd45d5b2fdc2f1e641b152f14e92883f890c2b4c652e28bb6f073ab4b2e\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://c872ef5ffdc5bdf13e0d82d0bca72b78fca6438d2078d0caca5c8cbc0f626389\",\"dweb:/ipfs/QmNxbPXnrMMmbu1aUp2jXnpkaXct9mfgDiVFbgZx1AgqcT\"]},\"project:/src/assets/eth/contracts/implementations/User.sol\":{\"keccak256\":\"0x76fcf2d18e6e936c159c85e35d58d101ed2f708b61842351657a9b27f8c04c28\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://12d7f48b570ed431cc75239d7bf0d5135291b25ad4eef6cf8e63425d51a5e4fc\",\"dweb:/ipfs/QmTmQVqDbgs16WuacDxwDAhqAvJAQrERZWebu5QwbmucCi\"]},\"project:/src/assets/eth/contracts/implementations/base/Admin.sol\":{\"keccak256\":\"0x9ffa9e5eec6500258e9c78f68d0611cd8e517810c9d2510e480276af75d01f67\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://b4e47ecdb27127d15ed8879842e61b16f712541d11701af4ef22f7781eb99664\",\"dweb:/ipfs/QmPGP9e3LFunoRjJB7VCxjX1BrDqm5xQnUugdEExezNo6U\"]},\"project:/src/assets/eth/contracts/implementations/base/Base.sol\":{\"keccak256\":\"0x70c477983c747e6f0399b95d3049988e6c01da49d81d413bf04c358b81cfa6b7\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://d7b6bcec5d435b8ad1653e0b163920184978964a4535febb1e1b894010bc5bac\",\"dweb:/ipfs/Qmd65nWLb182wN58vhCaYw4LpjLnstVjTCB2RqAY5eG9kb\"]},\"project:/src/assets/eth/contracts/implementations/base/Store.sol\":{\"keccak256\":\"0xcac361695e7fe911198115a4a374a483271fad6f52e129b759799d730aaca4ee\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://2a1d6248229fa7112baa3256a8860b8d41c0777e82aaaff86682a50d8d79b896\",\"dweb:/ipfs/Qmc3rYn3twHoM6zYCzXeotZ6GB8nJ334XgmF7MvCEynoWv\"]},\"project:/src/assets/eth/contracts/utils/AddressLinkedList.sol\":{\"keccak256\":\"0xad95a257810b7cd38d1b307d747d10b3467bb5320bdcf7531910d994851c855d\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://0a42ef438d55fd39c3543d83319e87a4ef59188861dc91e2ec7d0769bbffbe32\",\"dweb:/ipfs/Qmc2UTFUxyU8RNcdfC4ny86NfXmzZfcDo48mrCnm3z7D3z\"]},\"project:/src/assets/eth/contracts/utils/AddressOrderedMap.sol\":{\"keccak256\":\"0xf1c220cfa7302e62110a2153b8df6998d189b5d35266a24f880f515e5cd1cfdd\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://5a1f32e50cfbad35996f57ca844b87b4977e793d1c09d65976d715ee94252274\",\"dweb:/ipfs/QmSB6qpusGbAGxrjzTCXrkdZam6UomAG12hfdQtL2mbEA4\"]},\"project:/src/assets/eth/contracts/utils/Bytes32.sol\":{\"keccak256\":\"0x216ade25cc3a82798aee1a794b971582189bf63f7be423d2d2d8ad90c7833324\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://b1a695d5ae680add5beaa9b3c36e55d2e11d9ef18599b72ef294e4981299f3f9\",\"dweb:/ipfs/QmdCit4qim4zNBaVXiW4L3r2ASkc4sGpTDYTUi5tMNfHM4\"]},\"project:/src/assets/eth/contracts/utils/String.sol\":{\"keccak256\":\"0xe6333bd8f02c73b16a06ad3c155ab97303149a8c3fdacbc3529767c38ba0c61f\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://50e40c3f65f717611b1c2e52fe7a9c8076737864a6ed12f6805fdad9f2c8ce05\",\"dweb:/ipfs/QmYfsMYdtTwR43BxfcMceNnxZp6cqgBhGWQFSwCp5wKXD1\"]},\"project:/src/assets/eth/contracts/utils/Uint.sol\":{\"keccak256\":\"0xe4697b758483901e737637e345af4ae592985ffabdc4b714154b4e857760e616\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://31db6fde8fd4cdc35f59a0852c7cd3f3da9c8bd845be5fef9a3fa8e8df0677bc\",\"dweb:/ipfs/QmcYyiLyTL51XsSG2uEuS7GPCeodYq7mnD2raAiVBHDHHK\"]}},\"version\":1}",
  "bytecode": "0x",
  "deployedBytecode": "0x",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [],
  "sourceMap": "",
  "deployedSourceMap": "",
  "source": "// SPDX-License-Identifier: GPL-3.0\r\npragma solidity ^0.8.17;\r\n\r\nimport \"./implementations/base/Base.sol\";\r\nimport \"./implementations/User.sol\";\r\nimport \"./implementations/File.sol\";\r\nimport \"./implementations/Reward.sol\";\r\nimport \"./implementations/Message.sol\";\r\n\r\ninterface ImplementationInterface is AdminInterface, UserInterface, FileInterface, RewardInterface, MessageInterface {\r\n    function init() external;\r\n}\r\n\r\ncontract ImplementationContact is UserContract, FileContact, RewardContact, MessageContact {\r\n    function init()\r\n    public {\r\n        require(admin != address(0), \"initialized\");\r\n        admin = msg.sender;\r\n        UserContract_init();\r\n        FileContract_init();\r\n//        RewardContract_init();\r\n        MessageContract_init();\r\n    }\r\n}\r\n\r\ncontract OurShare is AdminContract {\r\n    bytes32 private constant implementation_position = keccak256(\"OurShare\");\r\n\r\n    constructor(){\r\n        admin = msg.sender;\r\n    }\r\n\r\n    function getImplementation() public view returns (address implementation) {\r\n        bytes32 position = implementation_position;\r\n        assembly {\r\n            implementation := sload(position)\r\n        }\r\n    }\r\n\r\n    function setImplementation(address implementation) public _onlyAdmin_ {\r\n        bytes32 position = implementation_position;\r\n        assembly {\r\n            sstore(position, implementation)\r\n        }\r\n    }\r\n\r\n    function _delegate(address implementation) internal {\r\n        assembly {\r\n            calldatacopy(0, 0, calldatasize())\r\n            let result := delegatecall(gas(), implementation, 0, calldatasize(), 0, 0)\r\n            returndatacopy(0, 0, returndatasize())\r\n            switch result\r\n            case 0 {\r\n                revert(0, returndatasize())\r\n            }\r\n            default {\r\n                return (0, returndatasize())\r\n            }\r\n        }\r\n    }\r\n\r\n    fallback() external payable {\r\n        _delegate(getImplementation());\r\n    }\r\n\r\n    receive() external payable {\r\n        _delegate(getImplementation());\r\n    }\r\n}\r\n",
  "sourcePath": "F:\\OurChain\\OurShare\\src\\assets\\eth\\contracts\\OurShare.sol",
  "ast": {
    "absolutePath": "project:/src/assets/eth/contracts/OurShare.sol",
    "exportedSymbols": {
      "AddressLinkedList": [
        4493
      ],
      "AddressOrderedMap": [
        5070
      ],
      "AdminContract": [
        930
      ],
      "AdminInterface": [
        855
      ],
      "BaseContact": [
        939
      ],
      "Bytes32Lib": [
        5094
      ],
      "CategoryLib": [
        3546
      ],
      "FileContact": [
        626
      ],
      "FileInterface": [
        267
      ],
      "FileLib": [
        3354
      ],
      "ImplementationContact": [
        57
      ],
      "ImplementationInterface": [
        20
      ],
      "MessageContact": [
        639
      ],
      "MessageInterface": [
        630
      ],
      "OurShare": [
        123
      ],
      "RewardContact": [
        652
      ],
      "RewardInterface": [
        643
      ],
      "StoreContact": [
        3556
      ],
      "StringLib": [
        5139
      ],
      "Types": [
        1324
      ],
      "UintLib": [
        5174
      ],
      "UserContract": [
        844
      ],
      "UserInterface": [
        697
      ],
      "UserLib": [
        1836
      ]
    },
    "id": 124,
    "license": "GPL-3.0",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".17"
        ],
        "nodeType": "PragmaDirective",
        "src": "37:24:0"
      },
      {
        "absolutePath": "project:/src/assets/eth/contracts/implementations/base/Base.sol",
        "file": "./implementations/base/Base.sol",
        "id": 2,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 124,
        "sourceUnit": 940,
        "src": "65:41:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/src/assets/eth/contracts/implementations/User.sol",
        "file": "./implementations/User.sol",
        "id": 3,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 124,
        "sourceUnit": 845,
        "src": "108:36:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/src/assets/eth/contracts/implementations/File.sol",
        "file": "./implementations/File.sol",
        "id": 4,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 124,
        "sourceUnit": 627,
        "src": "146:36:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/src/assets/eth/contracts/implementations/Reward.sol",
        "file": "./implementations/Reward.sol",
        "id": 5,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 124,
        "sourceUnit": 653,
        "src": "184:38:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/src/assets/eth/contracts/implementations/Message.sol",
        "file": "./implementations/Message.sol",
        "id": 6,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 124,
        "sourceUnit": 640,
        "src": "224:39:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 7,
              "name": "AdminInterface",
              "nameLocations": [
                "304:14:0"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 855,
              "src": "304:14:0"
            },
            "id": 8,
            "nodeType": "InheritanceSpecifier",
            "src": "304:14:0"
          },
          {
            "baseName": {
              "id": 9,
              "name": "UserInterface",
              "nameLocations": [
                "320:13:0"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 697,
              "src": "320:13:0"
            },
            "id": 10,
            "nodeType": "InheritanceSpecifier",
            "src": "320:13:0"
          },
          {
            "baseName": {
              "id": 11,
              "name": "FileInterface",
              "nameLocations": [
                "335:13:0"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 267,
              "src": "335:13:0"
            },
            "id": 12,
            "nodeType": "InheritanceSpecifier",
            "src": "335:13:0"
          },
          {
            "baseName": {
              "id": 13,
              "name": "RewardInterface",
              "nameLocations": [
                "350:15:0"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 643,
              "src": "350:15:0"
            },
            "id": 14,
            "nodeType": "InheritanceSpecifier",
            "src": "350:15:0"
          },
          {
            "baseName": {
              "id": 15,
              "name": "MessageInterface",
              "nameLocations": [
                "367:16:0"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 630,
              "src": "367:16:0"
            },
            "id": 16,
            "nodeType": "InheritanceSpecifier",
            "src": "367:16:0"
          }
        ],
        "canonicalName": "ImplementationInterface",
        "contractDependencies": [],
        "contractKind": "interface",
        "fullyImplemented": false,
        "id": 20,
        "linearizedBaseContracts": [
          20,
          630,
          643,
          267,
          697,
          855
        ],
        "name": "ImplementationInterface",
        "nameLocation": "277:23:0",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "functionSelector": "e1c7392a",
            "id": 19,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "init",
            "nameLocation": "400:4:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 17,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "404:2:0"
            },
            "returnParameters": {
              "id": 18,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "415:0:0"
            },
            "scope": 20,
            "src": "391:25:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 124,
        "src": "267:152:0",
        "usedErrors": []
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 21,
              "name": "UserContract",
              "nameLocations": [
                "457:12:0"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 844,
              "src": "457:12:0"
            },
            "id": 22,
            "nodeType": "InheritanceSpecifier",
            "src": "457:12:0"
          },
          {
            "baseName": {
              "id": 23,
              "name": "FileContact",
              "nameLocations": [
                "471:11:0"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 626,
              "src": "471:11:0"
            },
            "id": 24,
            "nodeType": "InheritanceSpecifier",
            "src": "471:11:0"
          },
          {
            "baseName": {
              "id": 25,
              "name": "RewardContact",
              "nameLocations": [
                "484:13:0"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 652,
              "src": "484:13:0"
            },
            "id": 26,
            "nodeType": "InheritanceSpecifier",
            "src": "484:13:0"
          },
          {
            "baseName": {
              "id": 27,
              "name": "MessageContact",
              "nameLocations": [
                "499:14:0"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 639,
              "src": "499:14:0"
            },
            "id": 28,
            "nodeType": "InheritanceSpecifier",
            "src": "499:14:0"
          }
        ],
        "canonicalName": "ImplementationContact",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 57,
        "linearizedBaseContracts": [
          57,
          639,
          630,
          652,
          643,
          626,
          267,
          844,
          697,
          939,
          3556,
          930
        ],
        "name": "ImplementationContact",
        "nameLocation": "432:21:0",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 55,
              "nodeType": "Block",
              "src": "549:218:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 37,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 32,
                          "name": "admin",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 857,
                          "src": "568:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 35,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "585:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 34,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "577:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 33,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "577:7:0",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 36,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "577:10:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "568:19:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "696e697469616c697a6564",
                        "id": 38,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "589:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_93c0ba99f1a18bcdc81fcbcb6b4f15a9a6725f937075aed6fac107ffcb147068",
                          "typeString": "literal_string \"initialized\""
                        },
                        "value": "initialized"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_93c0ba99f1a18bcdc81fcbcb6b4f15a9a6725f937075aed6fac107ffcb147068",
                          "typeString": "literal_string \"initialized\""
                        }
                      ],
                      "id": 31,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "560:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 39,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "560:43:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 40,
                  "nodeType": "ExpressionStatement",
                  "src": "560:43:0"
                },
                {
                  "expression": {
                    "id": 44,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 41,
                      "name": "admin",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 857,
                      "src": "614:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 42,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "622:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 43,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "626:6:0",
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "622:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "614:18:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 45,
                  "nodeType": "ExpressionStatement",
                  "src": "614:18:0"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 46,
                      "name": "UserContract_init",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 714,
                      "src": "643:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 47,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "643:19:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 48,
                  "nodeType": "ExpressionStatement",
                  "src": "643:19:0"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 49,
                      "name": "FileContract_init",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 306,
                      "src": "673:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 50,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "673:19:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 51,
                  "nodeType": "ExpressionStatement",
                  "src": "673:19:0"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 52,
                      "name": "MessageContract_init",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 638,
                      "src": "737:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 53,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "737:22:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 54,
                  "nodeType": "ExpressionStatement",
                  "src": "737:22:0"
                }
              ]
            },
            "functionSelector": "e1c7392a",
            "id": 56,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "init",
            "nameLocation": "530:4:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 29,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "534:2:0"
            },
            "returnParameters": {
              "id": 30,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "549:0:0"
            },
            "scope": 57,
            "src": "521:246:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 124,
        "src": "423:347:0",
        "usedErrors": []
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 58,
              "name": "AdminContract",
              "nameLocations": [
                "795:13:0"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 930,
              "src": "795:13:0"
            },
            "id": 59,
            "nodeType": "InheritanceSpecifier",
            "src": "795:13:0"
          }
        ],
        "canonicalName": "OurShare",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 123,
        "linearizedBaseContracts": [
          123,
          930
        ],
        "name": "OurShare",
        "nameLocation": "783:8:0",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": true,
            "id": 64,
            "mutability": "constant",
            "name": "implementation_position",
            "nameLocation": "841:23:0",
            "nodeType": "VariableDeclaration",
            "scope": 123,
            "src": "816:72:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 60,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "816:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "4f75725368617265",
                  "id": 62,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "string",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "877:10:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_stringliteral_83b120dcec6431b431aa375a0c3da636d7b0d85fae5f77576b0a2964d76e3c13",
                    "typeString": "literal_string \"OurShare\""
                  },
                  "value": "OurShare"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_stringliteral_83b120dcec6431b431aa375a0c3da636d7b0d85fae5f77576b0a2964d76e3c13",
                    "typeString": "literal_string \"OurShare\""
                  }
                ],
                "id": 61,
                "name": "keccak256",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 4294967288,
                "src": "867:9:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                  "typeString": "function (bytes memory) pure returns (bytes32)"
                }
              },
              "id": 63,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "functionCall",
              "lValueRequested": false,
              "nameLocations": [],
              "names": [],
              "nodeType": "FunctionCall",
              "src": "867:21:0",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "private"
          },
          {
            "body": {
              "id": 72,
              "nodeType": "Block",
              "src": "910:37:0",
              "statements": [
                {
                  "expression": {
                    "id": 70,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 67,
                      "name": "admin",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 857,
                      "src": "921:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 68,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "929:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 69,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "933:6:0",
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "929:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "921:18:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 71,
                  "nodeType": "ExpressionStatement",
                  "src": "921:18:0"
                }
              ]
            },
            "id": 73,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 65,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "908:2:0"
            },
            "returnParameters": {
              "id": 66,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "910:0:0"
            },
            "scope": 123,
            "src": "897:50:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 83,
              "nodeType": "Block",
              "src": "1029:139:0",
              "statements": [
                {
                  "assignments": [
                    79
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 79,
                      "mutability": "mutable",
                      "name": "position",
                      "nameLocation": "1048:8:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 83,
                      "src": "1040:16:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 78,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "1040:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 81,
                  "initialValue": {
                    "id": 80,
                    "name": "implementation_position",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 64,
                    "src": "1059:23:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1040:42:0"
                },
                {
                  "AST": {
                    "nodeType": "YulBlock",
                    "src": "1102:59:0",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "1117:33:0",
                        "value": {
                          "arguments": [
                            {
                              "name": "position",
                              "nodeType": "YulIdentifier",
                              "src": "1141:8:0"
                            }
                          ],
                          "functionName": {
                            "name": "sload",
                            "nodeType": "YulIdentifier",
                            "src": "1135:5:0"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1135:15:0"
                        },
                        "variableNames": [
                          {
                            "name": "implementation",
                            "nodeType": "YulIdentifier",
                            "src": "1117:14:0"
                          }
                        ]
                      }
                    ]
                  },
                  "evmVersion": "london",
                  "externalReferences": [
                    {
                      "declaration": 76,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "1117:14:0",
                      "valueSize": 1
                    },
                    {
                      "declaration": 79,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "1141:8:0",
                      "valueSize": 1
                    }
                  ],
                  "id": 82,
                  "nodeType": "InlineAssembly",
                  "src": "1093:68:0"
                }
              ]
            },
            "functionSelector": "aaf10f42",
            "id": 84,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getImplementation",
            "nameLocation": "964:17:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 74,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "981:2:0"
            },
            "returnParameters": {
              "id": 77,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 76,
                  "mutability": "mutable",
                  "name": "implementation",
                  "nameLocation": "1013:14:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 84,
                  "src": "1005:22:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 75,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1005:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1004:24:0"
            },
            "scope": 123,
            "src": "955:213:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 96,
              "nodeType": "Block",
              "src": "1246:138:0",
              "statements": [
                {
                  "assignments": [
                    92
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 92,
                      "mutability": "mutable",
                      "name": "position",
                      "nameLocation": "1265:8:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 96,
                      "src": "1257:16:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 91,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "1257:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 94,
                  "initialValue": {
                    "id": 93,
                    "name": "implementation_position",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 64,
                    "src": "1276:23:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1257:42:0"
                },
                {
                  "AST": {
                    "nodeType": "YulBlock",
                    "src": "1319:58:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "position",
                              "nodeType": "YulIdentifier",
                              "src": "1341:8:0"
                            },
                            {
                              "name": "implementation",
                              "nodeType": "YulIdentifier",
                              "src": "1351:14:0"
                            }
                          ],
                          "functionName": {
                            "name": "sstore",
                            "nodeType": "YulIdentifier",
                            "src": "1334:6:0"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1334:32:0"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1334:32:0"
                      }
                    ]
                  },
                  "evmVersion": "london",
                  "externalReferences": [
                    {
                      "declaration": 86,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "1351:14:0",
                      "valueSize": 1
                    },
                    {
                      "declaration": 92,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "1341:8:0",
                      "valueSize": 1
                    }
                  ],
                  "id": 95,
                  "nodeType": "InlineAssembly",
                  "src": "1310:67:0"
                }
              ]
            },
            "functionSelector": "d784d426",
            "id": 97,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 89,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 88,
                  "name": "_onlyAdmin_",
                  "nameLocations": [
                    "1234:11:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 875,
                  "src": "1234:11:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "1234:11:0"
              }
            ],
            "name": "setImplementation",
            "nameLocation": "1185:17:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 87,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 86,
                  "mutability": "mutable",
                  "name": "implementation",
                  "nameLocation": "1211:14:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 97,
                  "src": "1203:22:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 85,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1203:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1202:24:0"
            },
            "returnParameters": {
              "id": 90,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1246:0:0"
            },
            "scope": 123,
            "src": "1176:208:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 103,
              "nodeType": "Block",
              "src": "1444:420:0",
              "statements": [
                {
                  "AST": {
                    "nodeType": "YulBlock",
                    "src": "1464:393:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1492:1:0",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1495:1:0",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "arguments": [],
                              "functionName": {
                                "name": "calldatasize",
                                "nodeType": "YulIdentifier",
                                "src": "1498:12:0"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1498:14:0"
                            }
                          ],
                          "functionName": {
                            "name": "calldatacopy",
                            "nodeType": "YulIdentifier",
                            "src": "1479:12:0"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1479:34:0"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1479:34:0"
                      },
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "1527:74:0",
                        "value": {
                          "arguments": [
                            {
                              "arguments": [],
                              "functionName": {
                                "name": "gas",
                                "nodeType": "YulIdentifier",
                                "src": "1554:3:0"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1554:5:0"
                            },
                            {
                              "name": "implementation",
                              "nodeType": "YulIdentifier",
                              "src": "1561:14:0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1577:1:0",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "arguments": [],
                              "functionName": {
                                "name": "calldatasize",
                                "nodeType": "YulIdentifier",
                                "src": "1580:12:0"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1580:14:0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1596:1:0",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1599:1:0",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "delegatecall",
                            "nodeType": "YulIdentifier",
                            "src": "1541:12:0"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1541:60:0"
                        },
                        "variables": [
                          {
                            "name": "result",
                            "nodeType": "YulTypedName",
                            "src": "1531:6:0",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1630:1:0",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1633:1:0",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "arguments": [],
                              "functionName": {
                                "name": "returndatasize",
                                "nodeType": "YulIdentifier",
                                "src": "1636:14:0"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1636:16:0"
                            }
                          ],
                          "functionName": {
                            "name": "returndatacopy",
                            "nodeType": "YulIdentifier",
                            "src": "1615:14:0"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1615:38:0"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1615:38:0"
                      },
                      {
                        "cases": [
                          {
                            "body": {
                              "nodeType": "YulBlock",
                              "src": "1701:61:0",
                              "statements": [
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "1727:1:0",
                                        "type": "",
                                        "value": "0"
                                      },
                                      {
                                        "arguments": [],
                                        "functionName": {
                                          "name": "returndatasize",
                                          "nodeType": "YulIdentifier",
                                          "src": "1730:14:0"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "1730:16:0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "revert",
                                      "nodeType": "YulIdentifier",
                                      "src": "1720:6:0"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1720:27:0"
                                  },
                                  "nodeType": "YulExpressionStatement",
                                  "src": "1720:27:0"
                                }
                              ]
                            },
                            "nodeType": "YulCase",
                            "src": "1694:68:0",
                            "value": {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1699:1:0",
                              "type": "",
                              "value": "0"
                            }
                          },
                          {
                            "body": {
                              "nodeType": "YulBlock",
                              "src": "1784:62:0",
                              "statements": [
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "1811:1:0",
                                        "type": "",
                                        "value": "0"
                                      },
                                      {
                                        "arguments": [],
                                        "functionName": {
                                          "name": "returndatasize",
                                          "nodeType": "YulIdentifier",
                                          "src": "1814:14:0"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "1814:16:0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "return",
                                      "nodeType": "YulIdentifier",
                                      "src": "1803:6:0"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1803:28:0"
                                  },
                                  "nodeType": "YulExpressionStatement",
                                  "src": "1803:28:0"
                                }
                              ]
                            },
                            "nodeType": "YulCase",
                            "src": "1776:70:0",
                            "value": "default"
                          }
                        ],
                        "expression": {
                          "name": "result",
                          "nodeType": "YulIdentifier",
                          "src": "1674:6:0"
                        },
                        "nodeType": "YulSwitch",
                        "src": "1667:179:0"
                      }
                    ]
                  },
                  "evmVersion": "london",
                  "externalReferences": [
                    {
                      "declaration": 99,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "1561:14:0",
                      "valueSize": 1
                    }
                  ],
                  "id": 102,
                  "nodeType": "InlineAssembly",
                  "src": "1455:402:0"
                }
              ]
            },
            "id": 104,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_delegate",
            "nameLocation": "1401:9:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 100,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 99,
                  "mutability": "mutable",
                  "name": "implementation",
                  "nameLocation": "1419:14:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 104,
                  "src": "1411:22:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 98,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1411:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1410:24:0"
            },
            "returnParameters": {
              "id": 101,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1444:0:0"
            },
            "scope": 123,
            "src": "1392:472:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 112,
              "nodeType": "Block",
              "src": "1900:49:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 108,
                          "name": "getImplementation",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 84,
                          "src": "1921:17:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 109,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1921:19:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 107,
                      "name": "_delegate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 104,
                      "src": "1911:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 110,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1911:30:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 111,
                  "nodeType": "ExpressionStatement",
                  "src": "1911:30:0"
                }
              ]
            },
            "id": 113,
            "implemented": true,
            "kind": "fallback",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 105,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1880:2:0"
            },
            "returnParameters": {
              "id": 106,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1900:0:0"
            },
            "scope": 123,
            "src": "1872:77:0",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 121,
              "nodeType": "Block",
              "src": "1984:49:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 117,
                          "name": "getImplementation",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 84,
                          "src": "2005:17:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 118,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2005:19:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 116,
                      "name": "_delegate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 104,
                      "src": "1995:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 119,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1995:30:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 120,
                  "nodeType": "ExpressionStatement",
                  "src": "1995:30:0"
                }
              ]
            },
            "id": 122,
            "implemented": true,
            "kind": "receive",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 114,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1964:2:0"
            },
            "returnParameters": {
              "id": 115,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1984:0:0"
            },
            "scope": 123,
            "src": "1957:76:0",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 124,
        "src": "774:1262:0",
        "usedErrors": []
      }
    ],
    "src": "37:2001:0"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.17+commit.8df45f5f.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.13",
  "updatedAt": "2023-05-27T06:31:39.216Z",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}